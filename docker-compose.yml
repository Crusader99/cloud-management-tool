version: "3.9"
services:
  web-app: # Internal port is 8081
    build: web-app
  server-backend:
    build: server-backend
    depends_on:
      - postgres
    environment:
      REST_PORT: 8080
      POSTGRESQL_HOST: postgres
      POSTGRESQL_PORT: 5432
      POSTGRESQL_USER: ${POSTGRES_USER}
      POSTGRESQL_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRESQL_DB: ${POSTGRES_DB}
  postgres:
    image: postgres
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
  phppgadmin: # Simplifies management of postgres
    image: neimheadh/phppgadmin
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASSWORD}
    ports:
      - "${PHPPGADMIN_PORT}:80"
  prometheus:
    image: prom/prometheus:v2.26.0
    volumes:
      - ./docker-compose/prometheus/:/etc/prometheus/:z # Config files
      - prometheus:/prometheus # Database volume
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090
    depends_on:
      - server-backend
  grafana:
    image: grafana/grafana:7.5.3
    ports:
      - '${GRAFANA_PORT}:3000'
    volumes: # Use http://prometheus:9090 as connect url for data source
      - ./docker-compose/grafana:/var/lib/grafana:Z # :z is required in SELinux using podman
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USERNAME}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
  traefik: # https://hub.docker.com/_/traefik/
    image: traefik:v2.4.8
    volumes:
      - ./docker-compose/traefik:/etc/traefik
    privileged: true
    depends_on:
      - server-backend
      - web-app
    ports:
      - 80:80
      - 8092:8080 # Dashboard: http://localhost:8082
volumes:
  prometheus:
  postgres:
